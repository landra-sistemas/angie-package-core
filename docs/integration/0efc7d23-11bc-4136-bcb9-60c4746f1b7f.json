{
    "id": "0efc7d23-11bc-4136-bcb9-60c4746f1b7f",
    "name": "LabFlow Results",
    "data": {
        "id": "3eb26172-80fb-4a5f-8e4d-6138477be10c",
        "name": "LabFlow Results",
        "description": "Envío de resultados de Labflow a SmartLIS",
        "created_on": "2021-11-15T15:10:25.800Z",
        "channels": [
            {
                "name": "Only JSON",
                "id": "95ee1719-d785-4eef-bf8c-cf537ed118e0",
                "created_on": "2021-11-29T08:31:29.571Z",
                "version": 149,
                "nodes": [
                    {
                        "id": "cc0c6620-d6d4-4626-bdc3-ce84dd5c606c",
                        "type_id": "50b890b5-a309-4b7c-9fa0-5c8b23b25c6f",
                        "custom_name": "Groovy Code",
                        "links": [
                            {
                                "node_id": "2038dda0-8fb9-40da-a983-ce339e5dc2f9",
                                "handle": null
                            }
                        ],
                        "position": {
                            "x": 409,
                            "y": 177
                        },
                        "data": {
                            "label": "Convert to JSON",
                            "language": "groovy",
                            "code": "import ca.uhn.hl7v2.model.v25.group.ORM_O01_ORDER;\r\nimport ca.uhn.hl7v2.model.v25.message.ORM_O01;\r\nimport ca.uhn.hl7v2.model.Message;\r\n\r\n\r\n\r\n/*\r\nGeneric Message\r\ndef msg = request.getBody(ca.uhn.hl7v2.model.Message.class);\r\ndef terser = new ca.uhn.hl7v2.util.Terser(msg);\r\n*/\r\n\r\nORM_O01 orm_o01 = (ORM_O01) request.getBody(Message.class);\r\ndef terser = new ca.uhn.hl7v2.util.Terser(orm_o01);\r\n\r\ndef tests = [:];\r\ndef counter = 0;\r\n\r\nfor (ORM_O01_ORDER orderObservation : orm_o01.getORDERAll()) {\r\n    def orc = orderObservation.getORC();\r\n    def obr = orderObservation.getORDER_DETAIL().getOBR();\r\n    tests[counter++] = [\r\n        \"test_code\":obr.getObr4_UniversalServiceIdentifier().getCe1_Identifier().getValue(),\r\n        \"test_name\":obr.getObr4_UniversalServiceIdentifier().getCe2_Text().getValue(),\r\n        \"sample_key\": orc.getOrc4_PlacerGroupNumber().getName(),\r\n        \"sample_name\": null,\r\n        \"container\": null,\r\n        \"result\": null,\r\n        \"result_date\": null\r\n    ]\r\n};\r\n\r\ndef json = [\r\n    order_number_source: terser.get(\"/ORDER/ORC-2-1\"),\r\n    order_number: terser.get(\"/ORDER/ORC-2-1\"),\r\n    order_comment: null,\r\n    order_status: null,\r\n    order_date: terser.get(\"/MSH-7-1\"),\r\n    order_source: terser.get(\"/MSH-3-1\"),\r\n    nif: terser.get(\"/PATIENT/PID-20-1\"),\r\n    nhc: null, firstname: terser.get(\"/PATIENT/PID-5-2\"),\r\n    lastname: terser.get(\"/PATIENT/PID-5-1\"),\r\n    lastname2: null,\r\n    birthdate: terser.get(\"/PATIENT/PID-7-1\"),\r\n    address: terser.get(\"/PATIENT/PID-11-1\"),\r\n    sex: terser.get(\"/PATIENT/PID-8-1\"),\r\n    phone: terser.get(\"/PATIENT/PID-13-1\"),\r\n    physician: terser.get(\"/ORDER/ORC-12-1-1\"),\r\n    physician_name: [terser.get(\"/PATIENT/PATIENT_VISIT/PV1-9-4-1\"), terser.get(\"/PATIENT/PATIENT_VISIT/PV1-9-2-1\")].findAll().join(\", \"),\r\n    physician_esp_name: terser.get(\"/PATIENT/PATIENT_VISIT/PV1-20-2-1\"),\r\n    domain: terser.get(\"/PATIENT/PATIENT_VISIT/PV1-2\"),\r\n    type: terser.get(\"/PATIENT/PATIENT_VISIT/PV1-2\"),\r\n    area: null,\r\n    area_name: null,\r\n    priority: null,\r\n    bed: null,\r\n    collpoint: null,\r\n    inscomp: terser.get(\"/PATIENT/PATIENT_VISIT/PV1-20-1-1\"),\r\n    collpoint_name: null,\r\n    tests: tests\r\n];  \r\n\r\nreturn new com.fasterxml.jackson.databind.ObjectMapper().writeValueAsString(json);"
                        }
                    },
                    {
                        "id": "2038dda0-8fb9-40da-a983-ce339e5dc2f9",
                        "type_id": "50b890b5-a309-4b7c-9fa0-5c8b23b25c6f",
                        "custom_name": "Groovy Code",
                        "links": [
                            {
                                "node_id": "c0c719b6-c507-4ef9-a8bb-674f94abec3c",
                                "handle": null
                            }
                        ],
                        "position": {
                            "x": 687,
                            "y": 181
                        },
                        "data": {
                            "label": "From JSON to SLAPI",
                            "language": "groovy",
                            "code": "import ca.uhn.hl7v2.model.v25.group.ORM_O01_ORDER\r\nimport groovy.json.JsonSlurper\r\nimport groovy.json.JsonParserType\r\n\r\n//Login to SL\r\ndef msg = request.getBody()\r\n/*def post = new URL(\"http://10.10.1.34/system/login/\").openConnection()\r\ndef message = '{\"usr\":\"suser\",\"pwd\":\"smartlis\"}'\r\n\r\npost.setRequestMethod(\"POST\")\r\npost.setDoOutput(true)\r\npost.setRequestProperty(\"Content-Type\", \"application/json\")\r\npost.getOutputStream().write(message.getBytes(\"UTF-8\"))\r\ndef postRC = post.getResponseCode()\r\n\r\ndef parser = new JsonSlurper()*/\r\ndef parser1 = new JsonSlurper()\r\nif (true/*postRC.equals(200)*/) { //If Login Succesfull\r\n\r\n    // def session = post.getInputStream().getText()\r\n    // def json = parser.parseText(session)\r\n    def sessKey = \"\"; //json[\"data\"][\"new_sess_key\"];\r\n    \r\n    msg = parser1.parseText(msg)\r\n    def exec = [\"job_info\": [\"name\"  : \"ORDER_CREATE: \" + msg[\"order_number\"],\"param1\": msg[\"order_number\"]],\"work_sess_id\": sessKey,\"space_code\": \"\",\"exec\": [:]]\r\n    def commandCounter = 1\r\n    def newOrder = [\"cmd\": \"new\", \"id\": msg[\"order_number\"]]\r\n    exec[\"exec\"][commandCounter++] =  newOrder\r\n    def newOrderCommand = [\"cmd\": \"modify_order_data\", \"field\": \"order_source\", \"data\": msg[\"order_source\"]]\r\n    exec[\"exec\"][commandCounter++] =  newOrderCommand\r\n    def addOrderDemographicCommand1 = [\"cmd\": \"modify_order_data\", \"field\": \"physician_name\", \"data\": msg[\"physician_name\"]]\r\n    exec[\"exec\"][commandCounter++] =  addOrderDemographicCommand1\r\n    def addOrderDemographicCommand2 = [\"cmd\": \"modify_order_data\", \"field\": \"physician\", \"data\": msg[\"physician\"]]\r\n    exec[\"exec\"][commandCounter++] =  addOrderDemographicCommand2\r\n    def addOrderDemographicCommand3 = [\"cmd\": \"modify_order_data\", \"field\": \"pat_name\", \"data\": msg[\"lastname\"]]\r\n    exec[\"exec\"][commandCounter++] = addOrderDemographicCommand3 \r\n    def addOrderDemographicCommand4 = [\"cmd\": \"modify_order_data\", \"field\": \"pat_name\", \"data\": msg[\"lastname\"]]\r\n    exec[\"exec\"][commandCounter++] =  addOrderDemographicCommand4\r\n    def addOrderDemographicCommand11 = [\"cmd\": \"modify_order_data\", \"field\": \"source\", \"data\": msg[\"order_source\"]]\r\n    exec[\"exec\"][commandCounter++] =  addOrderDemographicCommand11\r\n    def col1lp1oint = [\"cmd\"  : \"modify_order_data\",\"field\": \"collpoint\",\"data\" : \"5006\"]\r\n    exec[\"exec\"][commandCounter++] =  col1lp1oint\r\n    def ins1comp = [\"cmd\"  : \"modify_order_data\",\"field\": \"inscomp\",\"data\" : \"CEY-262\"]\r\n    exec[\"exec\"][commandCounter++] =  ins1comp\r\n    def coll_name = [\"cmd\"  : \"modify_order_data\",\"field\": \"collpoint_name\",\"data\" : msg[\"order_source\"]]\r\n    exec[\"exec\"][commandCounter++] =  coll_name\r\n    def source = [\"cmd\"  : \"modify_order_data\",\"field\": \"source\",\"data\" : msg[\"order_source\"]]\r\n    exec[\"exec\"][commandCounter++] =  source\r\n\r\n    if (msg[\"tests\"] != null) {\r\n        for (def genTestIndex in msg[\"tests\"]) {\r\n            def genTest =  genTestIndex.collect([] as HashSet){entry -> entry.value}\r\n             \r\n            def addGenTestCommand = [\"cmd\": \"add_test2\", \"test_code\":genTestIndex.collect({entry -> entry.value.test_code})[0] ]\r\n            \r\n            if (genTest && genTest[\"comment\"] != null && genTest[\"comment\"] != \"\") {\r\n            \r\n            }\r\n            exec[\"exec\"][commandCounter++] =  addGenTestCommand\r\n        }\r\n    }\r\n\r\n    def saveCommand = [\"cmd\": \"save\", \"async_mode\": \"false\"]\r\n    exec[\"exec\"][commandCounter++] =  saveCommand\r\n    return new com.fasterxml.jackson.databind.ObjectMapper().writeValueAsString(exec)\r\n}"
                        }
                    },
                    {
                        "id": "c0c719b6-c507-4ef9-a8bb-674f94abec3c",
                        "type_id": "e0a4f9f7-0d4b-4fd4-a500-dc944b17f241",
                        "custom_name": "Log",
                        "links": [],
                        "position": {
                            "x": 1007,
                            "y": 192
                        },
                        "data": {
                            "label": "Log",
                            "name": "debug"
                        }
                    },
                    {
                        "id": "d85e1ce8-255e-4146-bf6c-47edf99f9d9c",
                        "type_id": "core.utils.inject_node",
                        "position": {
                            "x": 11,
                            "y": 363
                        },
                        "data": {
                            "label": "Inyectar Mensaje",
                            "out_format": "hl7",
                            "buttonLabel": "Enviar",
                            "code": "MSH|^~\\&|ORIGEN|ORIGEN|Receiving||20211117103636+0100||ORM^O01|150da029-faa9-f77e-0fc2-1cad5957dde7|T|2.5|||AL||GB|UTF-8\r\nPID||PATID|PADIDLIST||Nombre^Apellido1 Apellido2||19850722|F|||9 Calle ^España^23440||PHONE|||||||PATID||||||||||N\r\nPV1||AMB|ESP^ESPECIALIDAD||||||doc_id^DocName^^DocApellido1 DocApellido2||||||||||1001004006|\r\nORC|NW|36565656555|4|ID_PETI_DESTINO|HD||||20211116165508+0100|||doc_id^DocName^^DocApellido1 DocApellido2\r\nOBR|1|||COAG^COAGULACION^WinPath|||20211116165508+0100||||||ESP^Especialidad|||doc_id||||||||||||doc_id^DocName^^DocApellido1 DocApellido2\r\nORC|NW|36565656555|ID_PETI_DESTINO|ID_PETI_DESTINO|HD||||20211116165508+0100|||doc_id^DocName^^DocApellido1 DocApellido2\r\nOBR|1|||A_614^POTASIO^WinPath|||20211116165508+0100||||||ESP^Especialidad|||doc_id||||||||||||doc_id^DocName^^DocApellido1 DocApellido2\r\nORC|NW|36565656555|ID_PETI_DESTINO|ID_PETI_DESTINO|HD||||20211116165508+0100|||doc_id^DocName^^DocApellido1 DocApellido\r\nOBR|1|||A_613^SODIO^WinPath|||20211116165508+0100||||||ESP^Especialidad|||doc_id||||||||||||doc_id^DocName^^DocApellido1 DocApellido2 NTE|1|P|Motivo: Preanestesia",
                            "url": "sendMessageToRoute"
                        },
                        "links": [
                            {
                                "node_id": "cc0c6620-d6d4-4626-bdc3-ce84dd5c606c",
                                "handle": null
                            }
                        ]
                    },
                    {
                        "id": "35c6c3a5-1554-4fed-b356-ef676bd7f3c4",
                        "type_id": "tcp_input",
                        "position": {
                            "x": 81,
                            "y": 145
                        },
                        "data": {
                            "label": "TCP/MLLP Input",
                            "mllp_query_params": {
                                "autoAck": true,
                                "keepAlive": true,
                                "requireEndOfData": true,
                                "stringPayload": true,
                                "validatePayload": false,
                                "acceptTimeout": 60000,
                                "backlog": 5,
                                "charsetName": "UTF-8"
                            },
                            "out_format": "hl7",
                            "protocol": "mllp",
                            "hostname": "0.0.0.0",
                            "port": 8888
                        },
                        "links": [
                            {
                                "node_id": "cc0c6620-d6d4-4626-bdc3-ce84dd5c606c",
                                "handle": null
                            }
                        ]
                    }
                ],
                "enabled": true,
                "status": "UNDEPLOYED",
                "last_updated": "2022-01-19T16:07:35.384Z",
                "message_count": 0,
                "messages_total": 135,
                "messages_error": 33,
                "messages_sent": 102,
                "last_deployed_route": null,
                "deployment_options": {
                    "trace_file": true,
                    "trace_headers": true,
                    "restart_policy": "unless_stopped",
                    "trace_properties": true,
                    "agent_assign_mode": "auto",
                    "trace_incoming_message": true,
                    "trace_outgoing_message": true
                },
                "agent": null
            },
            {
                "name": "compact_orangutan",
                "id": "ce5c9ef5-935c-4d8c-a76e-26910fc32ad7",
                "created_on": "2022-01-17T15:34:43.715Z",
                "version": 17,
                "nodes": [
                    {
                        "id": "0ac8db51-222b-489f-a7e4-0c82547b0e45",
                        "type_id": "tcp_input",
                        "position": {
                            "x": 244,
                            "y": 164
                        },
                        "data": {
                            "label": "TCP/MLLP Input",
                            "netty_query_params": {
                                "disconnect": false,
                                "keepAlive": true,
                                "sync": true,
                                "tcpNoDelay": true
                            },
                            "out_format": "raw",
                            "protocol": "netty:tcp",
                            "hostname": "0.0.0.0",
                            "port": 8757
                        },
                        "links": [
                            {
                                "node_id": "2a137d85-cb1b-4c8b-9307-662d76c3e92d",
                                "handle": null
                            }
                        ]
                    },
                    {
                        "id": "5bdb210c-1c05-4d6f-804d-6ea70cf33948",
                        "type_id": "log",
                        "position": {
                            "x": 869,
                            "y": 133
                        },
                        "data": {
                            "label": "Log",
                            "name": "debug"
                        },
                        "links": []
                    },
                    {
                        "id": "2a137d85-cb1b-4c8b-9307-662d76c3e92d",
                        "type_id": "template",
                        "position": {
                            "x": 493,
                            "y": 169
                        },
                        "data": {
                            "label": "Template",
                            "code": "lalalala"
                        },
                        "links": [
                            {
                                "node_id": "5bdb210c-1c05-4d6f-804d-6ea70cf33948",
                                "handle": null
                            }
                        ]
                    }
                ],
                "enabled": true,
                "status": "UNDEPLOYED",
                "last_updated": "2022-01-25T11:28:25.050Z",
                "messages_total": 10,
                "messages_error": 0,
                "messages_sent": 10,
                "last_deployed_route": "<routes xmlns=\"http://camel.apache.org/schema/spring\"><route  id=\"0ac8db51-222b-489f-a7e4-0c82547b0e45\">\n    <from uri=\"netty:tcp://0.0.0.0:8757?disconnect%3Dfalse%26keepAlive%3Dtrue%26sync%3Dtrue%26tcpNoDelay%3Dtrue\"/>\n            <multicast>\n        <to uri=\"direct:2a137d85-cb1b-4c8b-9307-662d76c3e92d\"/>\n    </multicast>\n</route><route  id=\"5bdb210c-1c05-4d6f-804d-6ea70cf33948\"> <from uri=\"direct:5bdb210c-1c05-4d6f-804d-6ea70cf33948\"/> <to uri=\"log:debug\"/> </route><route  id=\"2a137d85-cb1b-4c8b-9307-662d76c3e92d\">\r\n    <from uri=\"direct:2a137d85-cb1b-4c8b-9307-662d76c3e92d\"/>\r\n    <setBody>\r\n        <simple trim=\"false\">\r\n<![CDATA[lalalala]]>\r\n        </simple>\r\n    </setBody>\r\n    <multicast>\r\n        <to uri=\"direct:5bdb210c-1c05-4d6f-804d-6ea70cf33948\"/>\r\n    </multicast>\r\n</route></routes>",
                "agent": null
            },
            {
                "name": "common_fowl",
                "id": "e67555fa-4046-48a9-8bf6-15efc2a37fd5",
                "created_on": "2022-01-25T11:28:26.293Z",
                "version": 120,
                "nodes": [
                    {
                        "id": "cd095fff-0042-4cb5-8d33-99ad12f7a1cd",
                        "type_id": "entity_extractor",
                        "position": {
                            "x": 595,
                            "y": 87
                        },
                        "data": {
                            "label": "Crear Entidad",
                            "app": "angie.core.diraya",
                            "entity_type": "order"
                        },
                        "links": []
                    },
                    {
                        "id": "5416c4bf-5941-4d48-8fd8-bdd5ca9268aa",
                        "type_id": "wireTap",
                        "position": {
                            "x": 409,
                            "y": 207
                        },
                        "data": {
                            "label": "Wire Tap",
                            "handles": [
                                {
                                    "id": "out0",
                                    "to": "",
                                    "title": "Clonar Mensaje",
                                    "position": "top",
                                    "color": "blue"
                                },
                                {
                                    "id": "out1",
                                    "to": "",
                                    "title": "Continuar Flujo"
                                }
                            ]
                        },
                        "links": [
                            {
                                "node_id": "cd095fff-0042-4cb5-8d33-99ad12f7a1cd",
                                "handle": "out0"
                            },
                            {
                                "node_id": "97e2ff49-0f47-4d4c-850c-4b0553961300",
                                "handle": "out1"
                            }
                        ]
                    },
                    {
                        "id": "8150624b-de76-4d17-87e3-13cff9b8e23e",
                        "type_id": "http_input",
                        "position": {
                            "x": -29.709507444201947,
                            "y": 208.72626547932197
                        },
                        "data": {
                            "query_params": {
                                "async": false,
                                "enableCORS": false
                            },
                            "label": "HTTP Input",
                            "out_format": "json",
                            "protocol": "jetty:http",
                            "hostname": "0.0.0.0",
                            "path": "",
                            "port": 8881
                        },
                        "links": [
                            {
                                "node_id": "1de841b5-b9f4-4617-917f-cf6bcabf9513",
                                "handle": null
                            }
                        ]
                    },
                    {
                        "id": "5009dea3-bfdd-4820-ad90-be688ef8d82c",
                        "type_id": "inject",
                        "position": {
                            "x": -28.030774642473084,
                            "y": 293.0325570606917
                        },
                        "data": {
                            "label": "Inyectar Mensaje",
                            "out_format": "json",
                            "buttonLabel": "Enviar",
                            "code": "{\n    \"id\": \"12345\",\n    \"entity\": \"666\",\n    \"type\": \"ORM\"\n}",
                            "url": "sendMessageToRoute"
                        },
                        "links": [
                            {
                                "node_id": "1de841b5-b9f4-4617-917f-cf6bcabf9513",
                                "handle": null
                            }
                        ]
                    },
                    {
                        "id": "a290fa64-d8e2-4309-a145-c15fb05b7158",
                        "type_id": "end",
                        "position": {
                            "x": 974,
                            "y": 207
                        },
                        "data": {
                            "label": "Fin Flujo",
                            "code": "{\n    \"success\": true\n}"
                        },
                        "links": []
                    },
                    {
                        "id": "97e2ff49-0f47-4d4c-850c-4b0553961300",
                        "type_id": "template",
                        "position": {
                            "x": 708.4907015679584,
                            "y": 206.5202857501664
                        },
                        "data": {
                            "label": "Hacer cosas",
                            "code": "${body}"
                        },
                        "links": [
                            {
                                "node_id": "a290fa64-d8e2-4309-a145-c15fb05b7158",
                                "handle": null
                            }
                        ]
                    },
                    {
                        "id": "1de841b5-b9f4-4617-917f-cf6bcabf9513",
                        "type_id": "entity_identification",
                        "position": {
                            "x": 195,
                            "y": 208
                        },
                        "data": {
                            "label": "Identificar Entidad",
                            "code": [
                                {
                                    "format": "simple",
                                    "code": "message_id",
                                    "value": "${body['id']}"
                                },
                                {
                                    "format": "simple",
                                    "code": "entity_id",
                                    "value": "${body['entity']}"
                                },
                                {
                                    "format": "simple",
                                    "code": "message_type",
                                    "value": "${body['type']}"
                                }
                            ]
                        },
                        "links": [
                            {
                                "node_id": "5416c4bf-5941-4d48-8fd8-bdd5ca9268aa",
                                "handle": null
                            }
                        ]
                    }
                ],
                "enabled": true,
                "status": "UNDEPLOYED",
                "last_updated": "2022-01-26T12:25:17.036Z",
                "messages_total": 76,
                "messages_error": 17,
                "messages_sent": 59,
                "last_deployed_route": "<routes xmlns=\"http://camel.apache.org/schema/spring\"><route  id=\"cd095fff-0042-4cb5-8d33-99ad12f7a1cd\">\n    <from uri=\"direct:cd095fff-0042-4cb5-8d33-99ad12f7a1cd\"/>\n    <choice>\n            <when>\n                    <simple>${headers.message_type} == \"ORM\"</simple>\n                    <setHeader name=\"entity_type\"><constant>order</constant></setHeader>\n                    <setBody><simple>{\n    \"entity\": \"test\",\n    \"arrayTest\": [\n        \"0\",\n        \"1\"\n    ]\n}</simple></setBody>\n                    <unmarshal><json/></unmarshal>\n                    <process ref=\"entityGenerator\"/>\n                    <to uri=\"mock:elastic\"/>\n                </when>\n<when>\n                    <simple>${headers.message_type} == \"ORU\"</simple>\n                    <setHeader name=\"entity_type\"><constant>order</constant></setHeader>\n                    <setBody><simple>{\n    \"entity\": \"test_result\"\n}</simple></setBody>\n                    <unmarshal><json/></unmarshal>\n                    <process ref=\"entityGenerator\"/>\n                    <to uri=\"mock:elastic\"/>\n                </when>\n            <otherwise>\n                <setHeader name=\"entity_type\"><constant>unknown</constant></setHeader>\n                <setBody><simple>{}</simple></setBody>\n                <unmarshal><json/></unmarshal>\n                <process ref=\"entityGenerator\"/>\n                <to uri=\"mock:elastic\"/>\n            </otherwise>\n        </choice>\n    <to uri=\"log:entity_creation\"/>\n</route><route  id=\"5416c4bf-5941-4d48-8fd8-bdd5ca9268aa\">\r\n    <from uri=\"direct:5416c4bf-5941-4d48-8fd8-bdd5ca9268aa\"/>\r\n        <wireTap uri=\"direct:cd095fff-0042-4cb5-8d33-99ad12f7a1cd\"/>\r\n    <to uri=\"direct:97e2ff49-0f47-4d4c-850c-4b0553961300\" />\r\n    \r\n    <to uri=\"mock:ending\"/>\r\n</route><route  id=\"8150624b-de76-4d17-87e3-13cff9b8e23e\">\n    <from uri=\"jetty:http://0.0.0.0:8881?async%3Dfalse%26enableCORS%3Dfalse\"/>\n    \n        <unmarshal><json/></unmarshal>    <to uri=\"direct:1de841b5-b9f4-4617-917f-cf6bcabf9513\" />\n</route><route  id=\"5009dea3-bfdd-4820-ad90-be688ef8d82c\">\n    <from uri=\"direct:5009dea3-bfdd-4820-ad90-be688ef8d82c\"/>\n    <setBody>\n        <simple>\n            <![CDATA[{\\r\\n    \"id\": \"12345\",\\r\\n    \"entity\": \"666\",\\r\\n    \"type\": \"ORM\"\\r\\n}]]>\n        </simple>\n    </setBody>\n          <unmarshal><json/></unmarshal>    <to uri=\"direct:1de841b5-b9f4-4617-917f-cf6bcabf9513\" />\n</route><route  id=\"a290fa64-d8e2-4309-a145-c15fb05b7158\">\n    <from uri=\"direct:a290fa64-d8e2-4309-a145-c15fb05b7158\"/>\n    \n    <setBody>\n        <simple trim=\"false\">\n<![CDATA[{\n    \"success\": true\n}]]>\n        </simple>\n    </setBody>\n    \n    <to uri=\"mock:enda290fa64-d8e2-4309-a145-c15fb05b7158\"/>\n</route><route  id=\"97e2ff49-0f47-4d4c-850c-4b0553961300\">\r\n    <from uri=\"direct:97e2ff49-0f47-4d4c-850c-4b0553961300\"/>\r\n    <setBody>\r\n        <simple trim=\"false\">\r\n<![CDATA[${body}]]>\r\n        </simple>\r\n    </setBody>\r\n    <multicast>\r\n        <to uri=\"direct:a290fa64-d8e2-4309-a145-c15fb05b7158\"/>\r\n    </multicast>\r\n</route><route  id=\"1de841b5-b9f4-4617-917f-cf6bcabf9513\">\n    <from uri=\"direct:1de841b5-b9f4-4617-917f-cf6bcabf9513\"/>\n    <setHeader name=\"message_id\"><simple>${body['id']}</simple></setHeader>\n<setHeader name=\"entity_id\"><simple>${body['entity']}</simple></setHeader>\n<setHeader name=\"message_type\"><simple>${body['type']}</simple></setHeader>\n    <to uri=\"direct:5416c4bf-5941-4d48-8fd8-bdd5ca9268aa\" />\n</route></routes>",
                "deployment_options": {
                    "trace_file": true,
                    "trace_headers": true,
                    "restart_policy": "none",
                    "traced_headers": [
                        "entity_id",
                        "message_id",
                        "message_type"
                    ],
                    "trace_properties": true,
                    "agent_assign_mode": "auto",
                    "trace_incoming_message": true,
                    "trace_outgoing_message": true
                },
                "agent": null
            }
        ],
        "enabled": true,
        "last_updated": "2022-01-26T12:56:39.294Z",
        "package_code": "angie.core",
        "package_version": "1.0.0",
        "deployment_config": {
            "id": "3eb26172-80fb-4a5f-8e4d-6138477be10c",
            "last_deployment_date": "2022-01-26T12:56:39.298Z",
            "deployment_config": null,
            "organization_id": "da5c4c54-343c-4b19-a1d8-d6fbabe30016",
            "enabled": true,
            "channel_config": {
                "95ee1719-d785-4eef-bf8c-cf537ed118e0": {
                    "trace_file": true,
                    "trace_headers": true,
                    "restart_policy": "unless_stopped",
                    "trace_properties": true,
                    "agent_assign_mode": "auto",
                    "trace_incoming_message": true,
                    "trace_outgoing_message": true
                },
                "e67555fa-4046-48a9-8bf6-15efc2a37fd5": {
                    "trace_file": true,
                    "trace_headers": true,
                    "restart_policy": "none",
                    "traced_headers": [
                        "entity_id",
                        "message_id",
                        "message_type"
                    ],
                    "trace_properties": true,
                    "agent_assign_mode": "auto",
                    "trace_incoming_message": true,
                    "trace_outgoing_message": true
                }
            }
        }
    },
    "package_code": "angie.core",
    "package_version": "1.0.0"
}